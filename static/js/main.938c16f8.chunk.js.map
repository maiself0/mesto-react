{"version":3,"sources":["images/logo.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","Footer","CurrentUserContext","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","style","backgroundImage","link","onClick","onCardClick","heading","type","onCardLike","onCardDelete","Main","avatar","onEditAvatar","name","onEditProfile","about","onAddPlace","cards","map","length","url","ImagePopup","hash","React","useRef","useEffect","current","onClose","onError","res","ok","json","Promise","reject","api","config","this","_url","_headers","headers","fetch","then","all","getUserInfo","getCardList","data","method","body","JSON","stringify","place","id","addLike","removeLike","authorization","PopupWithForm","isOpen","noValidate","onSubmit","title","children","buttonLabel","EditProfilePopup","useState","setName","description","setDescription","event","preventDefault","onUpdateUser","required","minLength","maxLength","value","onChange","target","EditAvatarPopup","avatarUrlRef","onUpdateAvatar","reset","ref","AddPlacePopup","placeNameRef","placeUrlRef","placeholder","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","selectedCard","setSelectedCard","setCards","setCurrentUser","closeAllPopups","getUserInfoAndInitialCards","userInfo","gsap","registerPlugin","ScrollTrigger","batch","interval","batchMax","onEnter","to","autoAlpha","stagger","overwrite","onLeave","set","onEnterBack","onLeaveBack","catch","err","console","log","Provider","changeLikeCardStatus","newCard","state","c","removeCard","filter","setUserInfo","user","setUserAvatar","addCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.938c16f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import logo from '../images/logo.svg' \r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img\r\n        src={logo}\r\n        alt=\"лого сайта\"\r\n        className=\"header__logo\"\r\n      />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import { createContext } from \"react\";\r\n\r\nexport const CurrentUserContext = createContext();","import { useContext } from 'react';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Card(props) {\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  //отображение кнопки удаления\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `element__delete ${isOwn ? 'element__delete_visible' : 'element__delete_hidden'}`\r\n  ); \r\n  \r\n  //отображение лайка юзера\r\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_active' : ''}`;\r\n\r\n  //открытие попапа с к картинкой\r\n  function handleClick() {\r\n    props.onCardClick(props.card)\r\n  }\r\n  //поставить лайк\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card)\r\n  }\r\n\r\n  //удалить\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card)\r\n  }\r\n\r\n  return (\r\n    <article className=\"element\">\r\n      <div className=\"element__photo\" style={{ backgroundImage: `url(${props.card.link})` }} onClick={handleClick}/>\r\n      <div className=\"element__caption\">\r\n        <h2 className=\"element__heading\">{props.heading}</h2>\r\n        <div className=\"element__like-container\">\r\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\r\n          <p className=\"element__like-count\">{props.likes}</p>\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Card;","import { useContext } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport Card from \"./Card.js\";\r\n\r\n\r\nfunction Main(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__description\">\r\n          <div\r\n            className=\"profile__avatar\"\r\n            style={{ backgroundImage: `url(${currentUser.avatar})` }}\r\n            onClick={props.onEditAvatar}\r\n          />\r\n\r\n          <div className=\"profile__info\">\r\n            <div className=\"profile__name\">\r\n              <h1 className=\"profile__heading\">{currentUser.name}</h1>\r\n              <button\r\n                type=\"button\"\r\n                className=\"profile__button-edit\"\r\n                onClick={props.onEditProfile}\r\n              ></button>\r\n            </div>\r\n\r\n            <p className=\"profile__subheading\">{currentUser.about}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"profile__button-add\"\r\n          onClick={props.onAddPlace}\r\n        ></button>\r\n      </section>\r\n\r\n      <section className=\"elements\">\r\n        {props.cards.map((card) => (\r\n\r\n            <Card\r\n              key={card._id}\r\n              card={card}\r\n              heading={card.name}\r\n              likes={card.likes.length}\r\n              url={card.link}\r\n              onCardClick={props.onCardClick}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n            />\r\n\r\n        ))}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\n\r\nfunction ImagePopup(props) {\r\n  const hash = React.useRef('[img.link, img.name]');\r\n\r\n  React.useEffect(() => {\r\n    hash.current = [props.card.link, props.card.name]\r\n  })\r\n\r\n \r\n\r\n  return (\r\n    <div className={`popup popup_type_view-image ${props.card ? 'popup_opened' : ''}`}>\r\n      <div className=\"popup__container popup__container_image\">\r\n      \r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__button-close popup__button-close_image\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n\r\n        <img className=\"popup__image\" \r\n          src={props.card.link ? props.card.link : hash.current[0]}\r\n          alt={`${props.card.name ? props.card.name : hash.current[1]} (фото)`}/>\r\n\r\n        <p className=\"popup__caption\">{props.card.name ? props.card.name : hash.current[1]}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","const onError = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(\"ОшибкаFehler\");\r\n};\r\n\r\nclass Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n  //профиль\r\n  getUserInfo() {\r\n    return fetch(`${this._url}cohort-20/users/me`, {\r\n      headers: this._headers\r\n    }).then(onError);\r\n  }\r\n\r\n  //карточки\r\n  getCardList() {\r\n    return fetch(`${this._url}cohort-20/cards`, {\r\n      headers: this._headers\r\n    }).then(onError);\r\n  }\r\n\r\n  //профиль + карточки\r\n  getUserInfoAndInitialCards() {\r\n    return Promise.all([api.getUserInfo(), api.getCardList()])\r\n  }\r\n\r\n\r\n  //добавить данные профиля на сервер\r\n  setUserInfo(data) {\r\n    return fetch(`${this._url}cohort-20/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then(onError);\r\n  }\r\n  //добавление новой карточки\r\n  addCard(place) {\r\n    return fetch(`${this._url}cohort-20/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(place),\r\n    }).then(onError);\r\n  }\r\n\r\n  removeCard(id) {\r\n    return fetch(`${this._url}cohort-20/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(onError);\r\n  }\r\n\r\n  addLike(id) {\r\n    return fetch(`${this._url}cohort-20/cards/likes/${id}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then(onError);\r\n  }\r\n\r\n  removeLike(id) {\r\n    return fetch(`${this._url}cohort-20/cards/likes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then(onError);\r\n  }\r\n\r\n  changeLikeCardStatus(id, isLiked) {\r\n    return isLiked ? this.addLike(id) : this.removeLike(id)\r\n  }\r\n\r\n  setUserAvatar(data) {\r\n    return fetch(`${this._url}cohort-20/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(data),\r\n    }).then(onError);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  url:\"https://mesto.nomoreparties.co/v1/\",\r\n  headers: {\r\n    \"content-type\": \"application/json\",\r\n    authorization: '35f0ed57-1593-40bb-bc35-702beba473b9'\r\n  }\r\n}) \r\n\r\nexport default api;","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n  return (\r\n    <div\r\n      className={`popup popup_type_${props.name} ${\r\n        props.isOpen ? \"popup_opened\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"popup__container\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"popup__button-close\"\r\n          onClick={props.onClose}\r\n        ></button>\r\n\r\n        <form\r\n          className={`popup__form popup__form_type_${props.name}`}\r\n          name={`${props.name}`}\r\n          noValidate\r\n          onSubmit={props.onSubmit}\r\n        >\r\n          <h2 className=\"popup__heading\">{`${props.title}`}</h2>\r\n\r\n          {props.children}\r\n\r\n          <button className=\"popup__button-submit\">\r\n            {`${props.buttonLabel}`}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nfunction EditProfilePopup(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  useEffect(() => {\r\n      setName(currentUser.name);\r\n      setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  function handleDescriptionChange(event) {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"edit\"\r\n      title=\"Редактировать профиль\"\r\n      buttonLabel=\"Сохранить\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        name=\"heading\"\r\n        className=\"popup__input popup__input_text_heading\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        id=\"profile-name\"\r\n        value={name || \"\"}\r\n        onChange={handleNameChange}\r\n      />\r\n      <span className=\"profile-name-error error\"></span>\r\n      <input\r\n        type=\"text\"\r\n        name=\"subheading\"\r\n        className=\"popup__input popup__input_text_subheading\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        id=\"profile-desc\"\r\n        value={description || \"\"}\r\n        onChange={handleDescriptionChange}\r\n      />\r\n      <span className=\"profile-desc-error error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default EditProfilePopup;\r\n","import { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n  const avatarUrlRef = useRef();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    props.onUpdateAvatar({\r\n      /* Значение инпута, полученное с помощью рефа */\r\n      avatar: avatarUrlRef.current.value\r\n    });\r\n\r\n    event.target.reset();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"avatar\"\r\n      title=\"Обновить аватар\"\r\n      buttonLabel=\"Сохранить\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        type=\"url\"\r\n        name=\"src\"\r\n        className=\"popup__input popup__input_text_src\"\r\n        id=\"avatar-url\"\r\n        ref={avatarUrlRef}\r\n        required\r\n      />\r\n      <span className=\"avatar-url-error error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\nexport default EditAvatarPopup;","import { useRef } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\n\r\nfunction AddPlacePopup(props) {\r\n  const placeNameRef = useRef();\r\n  const placeUrlRef = useRef();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    props.onAddPlace({\r\n      /* Значение инпута, полученное с помощью рефа */\r\n      name: placeNameRef.current.value,\r\n      link: placeUrlRef.current.value,\r\n    });\r\n    \r\n    event.target.reset();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      name=\"add\"\r\n      title=\"Новое место\"\r\n      buttonLabel=\"Создать\"\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Название\"\r\n        name=\"place\"\r\n        className=\"popup__input popup__input_text_heading\"\r\n        id=\"place-name\"\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        ref={placeNameRef}\r\n        required\r\n      />\r\n      <span className=\"place-name-error error\"></span>\r\n      <input\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        name=\"src\"\r\n        className=\"popup__input popup__input_text_src\"\r\n        id=\"place-url\"\r\n        ref={placeUrlRef}\r\n        required\r\n      />\r\n      <span className=\"place-url-error error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import Header from \"./Header.js\";\r\nimport Footer from \"./Footer.js\";\r\nimport Main from \"./Main.js\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport api from \"../utils/api.js\";\r\nimport { CurrentUserContext } from \"./../contexts/CurrentUserContext\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup.js\";\r\nimport {gsap} from 'gsap';\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState(null??false);\r\n  const [cards, setCards] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getUserInfoAndInitialCards()\r\n      .then(([userInfo, cards]) => {\r\n        setCurrentUser(userInfo);\r\n        setCards(cards);\r\n        gsap.registerPlugin(ScrollTrigger);\r\n        ScrollTrigger.batch(\".element\", {\r\n          interval: 0.1, // time window (in seconds) for batching to occur. The first callback that occurs (of its type) will start the timer, and when it elapses, any other similar callbacks for other targets will be batched into an array and fed to the callback. Default is 0.1\r\n          batchMax: 3,   // maximum batch size (targets)\r\n          onEnter: batch => gsap.to(batch, {autoAlpha: 1, stagger: 0.15, overwrite: true}),\r\n          onLeave: batch => gsap.set(batch, {autoAlpha: 0, overwrite: true}),\r\n          onEnterBack: batch => gsap.to(batch, {autoAlpha: 1, stagger: 0.15, overwrite: true}),\r\n          onLeaveBack: batch => gsap.set(batch, {autoAlpha: 0, overwrite: true})\r\n          // you can also define things like start, end, etc.\r\n        });\r\n\r\n\r\n        \r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setAddPlacePopupOpen(false);\r\n    setEditProfilePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setSelectedCard(false);\r\n  }\r\n\r\n  //поставить лайк карточке\r\n  function handleCardLike(card) {\r\n    // Снова проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((state) =>\r\n          state.map((c) => (c._id === card._id ? newCard : c))\r\n        );\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  //удалениe карточки\r\n  function handleCardDelete(card) {\r\n    api\r\n      .removeCard(card._id)\r\n      .then(() => {\r\n        setCards(cards.filter((c) => c._id !== card._id));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleUpdateUser(data) {\r\n    api\r\n      .setUserInfo(data)\r\n      .then((user) => {\r\n        setCurrentUser(user);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleUpdateAvatar(link) {\r\n    api\r\n      .setUserAvatar(link)\r\n      .then(\r\n        setCurrentUser({\r\n          name: currentUser.name,\r\n          about: currentUser.about,\r\n          avatar: link.avatar,\r\n        })\r\n      )\r\n      .then(closeAllPopups())\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  function handleAddPlaceSubmit(place) {\r\n    api\r\n      .addCard(place)\r\n      .then((newCard) => setCards([newCard, ...cards]))\r\n      .then(closeAllPopups())\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header />\r\n\r\n        <Main\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onCardClick={handleCardClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n\r\n        <Footer />\r\n\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={closeAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={closeAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}